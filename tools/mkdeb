#!/usr/bin/perl -w

use strict;

# mkdeb - creates a .deb from a git archive

# Usage: mkdeb [path]
# mkdeb works in the current directory or on the named path
# It is required that mkrelease has been used first so that the
# toplevel CHANGELOG file is up to date.

sub System {
  print STDERR "-> ", join(" ", @_), "\n";
  return system(@_);
}

if (@ARGV) {
    chdir shift @ARGV;
}

my $name = `git config user.name`; 
chomp $name;
die "No user name configured\n" if $name eq "";

my $email = `git config user.email`; 
chomp $email;
die "No user email configured\n" if $email eq "";

my $status = `git status --porcelain`;
chomp $status;
#die "You have uncommitted changes\n" unless $status eq "";

my $here = `pwd`;
chomp $here;
my @bits = split("/", $here);
my $package = pop @bits;

open IN, "<CHANGELOG" or die "Cannot read CHANGELOG\n";
my $header = <IN>;
chomp $header;
my ($pkg, $vsn) = split(/ /, $header);
die "Package name mismatch\n" unless $pkg eq $package;
die "Bad version\n" unless $vsn =~ /^\d+\.\d+\.\d+(-.+)?$/;

my $message = "";
while (<IN>) {
  chomp;
  if (/^\s+--/) {
    last;
  } elsif (/^$/ || /^\s+/) {
    $message .= "$_\n";
  } else {
    last;
  }
}
close IN;
$message =~ s/^\s*\n+//s;
$message =~ s/\s+$//s;

my $first = `head -n 1 tools/debian/changelog`;
chomp $first;
$first =~ /^(.*?)\s+\((.*?)\)\s+(.*)$/ or die "Cannot parse debian/changelog\n";
my $debpkg = $1;
my $debvsn = $2;
my $debinfo = $3;
die "Debian package mismatch\n" unless $debpkg eq $package;

print STDERR "Version: $debvsn vs $vsn ($debinfo; $debpkg)\n";

if ($debvsn =~ /^$vsn-/) {
  print STDERR "debian/changelog already up-to-date; not touching.\n";
} else {
  system("mv tools/debian/changelog tools/debian/changelog~") and
    die "Cannot move debian/changelog\n";
  open IN, "<tools/debian/changelog~" or die "Cannot read debian/changelog\n";
  open OUT, ">tools/debian/changelog" or die "Cannot write debian/changelog\n";
  print OUT "$package ($vsn-1) $debinfo\n";
  print OUT "\n";
  print OUT "$message\n";
  print OUT "\n";
  my $date = `date -R`;
  chomp $date;
  print OUT " -- $name <$email>  $date\n\n";
  while (<IN>) {
    print OUT $_;
  }
  close IN;
  close OUT;
}

my $builddir = "/tmp/mkdeb-$$";
mkdir($builddir) or die "Could not create $builddir\n";
System("git archive -o $builddir/${package}_$vsn.orig.tar.gz --prefix=eln/ HEAD") and die "Cannot expert git archive\n";

chdir("..");
$here = `pwd`;
chomp $here;

chdir($builddir);
System("pwd");
System("tar xf ${package}_$vsn.orig.tar.gz") and die "tar failed\n";
chdir("$package-$vsn");
System("cp -a $here/$package/tools/debian eln/") and die "copy failed\n";
chdir("eln") or die "Could not enter $builddir/eln\n";
System("pwd");
System("dpkg-buildpackage -j8 -uc -us") and die "dpkg-buildpackage failed\n";
System("lintian") and die "lintian failed\n";
chdir($here);

System("cp $builddir/${package}_$vsn-1*deb releases") and die "copy failed\n";
System("rm -r $builddir");

print STDERR "Your binary debian package is:\n";
system("ls releases/${package}_$vsn-1*deb");
